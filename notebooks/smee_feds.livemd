<!-- livebook:{"app_settings":{"slug":"smee_feds"}} -->

# SmeeFeds Workbook

```elixir
Mix.install(
  [{:smee, ">= 0.2.0"}, {:smee_view, ">= 0.1.0"}, {:smee_feds, ">= 0.1.0"}, {:rambo, "~> 0.3.4"}, {:kino, "~>0.9.4"}]
)
alias Smee.{Metadata, Entity, Source, MDQ}
alias SmeeFeds.Federation
```

## What is SmeeFeds?

SmeeFeds is a small federation management extension to Smee for use in research, testing and development.

Smee has tools for handling the sources of SAML metadata but nothing to represent the publishers of metadata. SmeeFeds
adds a few tools for handling federations and includes a large collection of information about research and education
federations.

## Using MDQ from SmeeFeds

This is similar to earlier examples but looks up the service details from SmeeFeds data

**You should not do this using the default data in production!**

```elixir
cern_idp =
  SmeeFeds.get(:ukamf)
  |> SmeeFeds.Federation.mdq()
  |> MDQ.lookup!("https://cern.ch/login")
```

## Presenting data for a few federations

In this example snippet we look up data for a set of federations and pipe that information into Kino to create a nice
table.

```elixir
SmeeFeds.federations([:wayf, :haka, :dfnaai, :swamid])
|> Kino.DataTable.new()
```

## Using the quick Markdown export

SmeeFeds has a built-in Markdown compatible export function for dumping its database into documentation. Here we pipe it
into Kino, but you'd normally save it do disk or render it for showing on a webpage.

```elixir
SmeeFeds.federations()
|> SmeeFeds.Export.markdown()
|> Kino.Markdown.new()
```
